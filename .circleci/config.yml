version: 2.1
orbs:
  welcome: circleci/welcome-orb@0.4.1
commands:
  print_pipeline_id:
    parameters:
      id:
        type: string
    steps:
      - run: echo << parameters.id >>
  destroy_env:
    steps:
      - run:
          command: |
            aws cloudformation delete-stack \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
          when: on_fail
defaults: &defaults
  docker:
    - image: alpine:latest
jobs:
  say-hello:
    environment:
      SHIVA: 777777
      PIPEID:  << pipeline.id >>
      PIPENO: << pipeline.number >>
      GIT: << pipeline.project.git_url >>
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: |
            echo $SHIVA_ENV
            echo $PIPEID
            echo $PIPENO
            echo $GIT
            echo Hello, Shivaaaaa!
            echo $SHIVA
            pwd
            ls -lha
  save_output:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "save pipeline id to file"
          command: "echo << pipeline.id >> > /tmp/my_id.txt"
      - persist_to_workspace:
          root: /tmp/
          paths:
            - my_id.txt
  print_output:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/
      - run:
          name: "print output"
          command: |
            cat /tmp/my_id.txt
  using_command:
    <<: *defaults
    steps:
      - print_pipeline_id:
          id: << pipeline.id >> 
  test_fail:
    <<: *defaults
    steps:
      - run: return 0
      - run: 
          command: echo FAILED!
          when: on_fail
  myjob1:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run: echo "step1"
  create_infrastructure_aws:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            if aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      - run:
          command: return 1
      - destroy_env:
        when: on_fail

  configuration_infra:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["c7:91:59:3c:ee:69:b1:ea:04:ab:7d:43:14:0e:ff:8f"]
      - run:
          command: |
            apk add --update ansible
      - run:
          command: |
            ansible-playbook -i hosts main-remote.yml
  create_and_deploy_front_end:
  docker:
  - image: amazon/aws-cli
  steps:
    - checkout
    - run:
        name: Execute bucket.yml - Create Cloudformation Stack
        command: |
          aws cloudformation deploy \
          --template-file bucket.yml \
          --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
          --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
    - run:
        command: aws s3 sync index.html s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete
 
workflows:
  workflows:
    jobs:
      - create_infrastructure_aws